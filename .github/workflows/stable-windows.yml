name: stable-windows

on:
  workflow_dispatch:
    inputs:
      force_version:
        type: boolean
        description: Force update version
      generate_assets:
        type: boolean
        description: Generate assets
      checkout_pr:
        type: string
        description: Checkout PR
  repository_dispatch:
    types: [stable]
  push:
    branches: [master]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [master]
    paths-ignore:
      - "**/*.md"

env:
  APP_NAME: OrangePi Code
  ASSETS_REPOSITORY: ${{ github.repository }}
  BINARY_NAME: orangepicode
  GH_REPO_PATH: ${{ github.repository_owner }}/${{ github.repository }}
  ORG_NAME: ${{ github.repository_owner }}
  OS_NAME: windows
  VERSIONS_REPOSITORY: ${{ github.repository_owner }}/versions
  VSCODE_QUALITY: stable

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      MS_COMMIT: ${{ env.MS_COMMIT }}
      MS_TAG: ${{ env.MS_TAG }}
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      SHOULD_BUILD: ${{ env.SHOULD_BUILD }}
      SHOULD_DEPLOY: ${{ env.SHOULD_DEPLOY }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Uncompress source
        run: |
          python ./uncompress_source.py

      - name: Setup Env
        run: |
          date=$( date +%Y%j )
          RELEASE_VERSION="${MS_TAG}.${date: -5}"
          SHOULD_BUILD=yes
          SHOULD_DEPLOY=yes

          echo MS_COMMIT=${MS_COMMIT}
          echo MS_TAG=${MS_TAG}
          echo RELEASE_VERSION=${RELEASE_VERSION}
          echo SHOULD_BUILD=${SHOULD_BUILD}
          echo SHOULD_DEPLOY=${SHOULD_DEPLOY}

          echo MS_COMMIT=${MS_COMMIT} >> $GITHUB_ENV
          echo MS_TAG=${MS_TAG} >> $GITHUB_ENV
          echo RELEASE_VERSION=${RELEASE_VERSION} >> $GITHUB_ENV
          echo SHOULD_BUILD=${SHOULD_BUILD} >> $GITHUB_ENV
          echo SHOULD_DEPLOY=${SHOULD_DEPLOY} >> $GITHUB_ENV
